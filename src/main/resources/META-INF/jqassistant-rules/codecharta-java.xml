<jqassistant-rules xmlns="http://schema.jqassistant.org/rule/v2.2"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://schema.jqassistant.org/rule/v2.2 https://jqassistant.github.io/jqassistant/current/schema/jqassistant-rule-v2.2.xsd">

    <concept id="codecharta-java:TypeMetrics">
        <providesConcept refId="codecharta:Metrics"/>
        <requiresConcept refId="java:GeneratedType"/>
        <requiresConcept refId="java:AnonymousInnerType"/>
        <description>Provides LoC, CC, FanIn and FanOut of Java types including their inner classes as `(:Type)-[:HAS_METRICS]->(:Metrics)`.</description>
        <cypher><![CDATA[
            MATCH
              (:Artifact)-[:CONTAINS]->(outerType:Java:Type)
            WHERE NOT
              outerType:Inner
            WITH
              outerType as outerType
            MATCH
              (outerType)-[:DECLARES0*0..]->(type:Type)
            WHERE NOT
              type:Generated
            OPTIONAL MATCH
              (type)-[:DECLARES]->(method:Method)
            WITH
              outerType, type, sum(method.effectiveLineCount) AS loc, sum(method.cyclomaticComplexity) AS cc
            OPTIONAL MATCH
              (:Artifact)-[:CONTAINS]->(dependent:Type)-[:DEPENDS_ON]->(type)
            WITH
              outerType, type, loc, cc, count(dependent) AS fanIn
            OPTIONAL MATCH
              (type)-[:DEPENDS_ON]->(dependency:Type)<-[:CONTAINS]-(:Artifact)
            WITH
              outerType, type, loc, cc, fanIn, count(dependency) AS fanOut
            MERGE
              (outerType)-[:HAS_METRICS]->(metrics:CodeCharta:Metrics)
            SET
              metrics = {loc: loc, cc: cc, fanIn: fanIn, fanOut: fanOut}
            RETURN
              count(type) AS Elements
            ]]></cypher>
        <verify>
            <aggregation/>
        </verify>
    </concept>

    <concept id="codecharta-java:Report">
        <requiresConcept refId="codecharta:Metrics"/>
        <requiresConcept refId="java:GeneratedType"/>
        <description>Creates a CodeCharta report for Java types.</description>
        <cypher><![CDATA[
            MATCH
              (element:Java)-[:HAS_METRICS]->(:CodeCharta:Metrics),
              tree = shortestPath((root:Java:Package)-[:CONTAINS*]->(element))
            WHERE NOT (
              element:Generated
              or (:Package)-[:CONTAINS]->(root) // identify the root package
            )
            WITH
              nodes(tree) as elements
            UNWIND
              elements as element // filter out duplicate packages
            WITH
              distinct element
            OPTIONAL MATCH
              (parent:Package)-[:CONTAINS]->(element)
            OPTIONAL MATCH
              (element)-[:HAS_METRICS]->(metrics:CodeCharta:Metrics)
            RETURN
              element AS Element, element.name AS ElementLabel, parent AS Parent, metrics AS Metrics
            ]]></cypher>
        <report type="codecharta"/>
    </concept>

</jqassistant-rules>
